# Scaled CinemaHint Application Server Configuration
server {
    listen 80;
    server_name localhost cinemahint.com www.cinemahint.com;
    
    # Redirect HTTP to HTTPS in production
    # return 301 https://$server_name$request_uri;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Load-Balancer "nginx-cinemahint" always;
    
    # API endpoints with enhanced load balancing
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=30 nodelay;
        limit_conn per_ip 5;
        
        # Proxy settings for load balancing
        proxy_pass http://cinemahint_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Load balancer headers
        proxy_set_header X-Load-Balancer "nginx";
        proxy_set_header X-Upstream-Server $upstream_addr;
        
        # Timeouts for load balancing
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        
        # Cache configuration for API responses
        location ~* /api/(movies/popular|movies/\d+)$ {
            proxy_pass http://cinemahint_backend;
            proxy_cache app_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $arg_nocache;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Authentication endpoints with stricter limits
    location /api/auth/ {
        limit_req zone=auth burst=10 nodelay;
        limit_conn per_ip 3;
        
        # Sticky sessions for auth (if needed)
        proxy_pass http://cinemahint_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced timeouts for auth
        proxy_connect_timeout 15s;
        proxy_send_timeout 60s;
        proxy_read_timeout 120s;
        
        # No caching for auth endpoints
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Health check endpoint (bypass load balancer for monitoring)
    location /api/health {
        access_log off;
        
        # Check all upstream servers
        proxy_pass http://cinemahint_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
        
        # Add health check headers
        add_header X-Health-Check "nginx-ok" always;
        add_header X-Upstream-Status $upstream_status always;
    }
    
    # Load balancer status endpoint
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker network
        deny all;
    }
    
    # Static files with aggressive caching
    location / {
        limit_req zone=static burst=50 nodelay;
        
        proxy_pass http://cinemahint_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            proxy_pass http://cinemahint_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 1d;
            proxy_cache_valid 404 1m;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Gzip for static files
            gzip_static on;
        }
        
        # HTML files with shorter cache
        location ~* \.(html|htm)$ {
            proxy_pass http://cinemahint_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 5m;
            
            expires 5m;
            add_header Cache-Control "public, max-age=300";
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    location ~ \.(env|log|conf|bak|sql)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Block common attack patterns
    location ~ /(wp-|wordpress|admin|phpmyadmin) {
        deny all;
        access_log off;
        return 444;
    }
}

# HTTPS Configuration with load balancing
server {
    listen 443 ssl http2;
    server_name cinemahint.com www.cinemahint.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers for HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://apis.google.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:;" always;
    
    # Include same location blocks as HTTP server
    include /etc/nginx/conf.d/locations.conf;
}