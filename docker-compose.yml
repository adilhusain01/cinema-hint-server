# Docker Compose configuration for CinemaHint production deployment

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: cinemahint-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      #- ./redis.conf:/usr/local/etc/redis/redis.conf
    #command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - cinemahint-network
    environment:
      - REDIS_REPLICATION_MODE=master

  # MongoDB Atlas - External Service (no container needed)
  # mongodb:
  #   image: mongo:6.0
  #   container_name: cinemahint-mongodb
  #   restart: unless-stopped
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./mongo-init:/docker-entrypoint-initdb.d
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password123
  #     MONGO_INITDB_DATABASE: cinemahint
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 40s
  #   networks:
  #     - cinemahint-network

  # Main Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cinemahint-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
      # MongoDB Atlas - external service, no dependency needed
      # mongodb:
      #   condition: service_healthy
    environment:
      # Application Configuration
      - NODE_ENV=production
      - PORT=5000
      
      # Database Configuration (use .env for MongoDB Atlas)
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=redis://redis:6379
      
      # External APIs (set these in production)
      - TMDB_API_KEY=${TMDB_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-key-min-32-chars}
      
      # CORS Configuration (for Vercel deployment)
      - FRONTEND_URL=${FRONTEND_URL:-https://cinemahint.com}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://cinemahint.com,https://www.cinemahint.com}
      
      # Rate Limiting
      - DAILY_RECOMMENDATION_LIMIT=${DAILY_RECOMMENDATION_LIMIT:-10}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
    
    volumes:
      - app_logs:/app/server/logs
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    networks:
      - cinemahint-network
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: cinemahint-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - cinemahint-network
    profiles:
      - production

  # Redis Insight (for development debugging)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: cinemahint-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - cinemahint-network
    profiles:
      - development

# Named Volumes
volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local
  redis_insight_data:
    driver: local

# Networks
networks:
  cinemahint-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16